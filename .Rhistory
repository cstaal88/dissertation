library(ggplot2)
library(dplyr)
library(tidyr)
# Data
data <- data.frame(
Year = c(1990, 1992, 1994, 1996, 1998, 2000, 2004, 2008, 2012, 2016, 2020, 2024),
`Own-party feeling` = c(71.3, 70, 70.2, 71.7, 70.5, 72.6, 73.6, 70.7, 69.9, 67.1, 71.5, 70.5),
`Rival-party feeling` = c(46.7, 41.8, 42.5, 41.2, 41.2, 41.6, 39.6, 34.7, 32.8, 26.1, 19.3, 20.6)
)
# Reshape data for ggplot
data_long <- data %>%
pivot_longer(cols = c(`Own.party.feeling`, `Rival.party.feeling`),
names_to = "Party_Type",
values_to = "Feeling_Score") %>%
mutate(Party_Type = case_when(
Party_Type == "Own.party.feeling" ~ "Own-party feeling",
Party_Type == "Rival.party.feeling" ~ "Rival-party feeling"
))
# Create the plot with the brown/orange color scheme from your chart
p <- ggplot(data_long, aes(x = Year, y = Feeling_Score, color = Party_Type)) +
geom_line(size = 1.2) +
geom_point(size = 2.5) +
scale_color_manual(values = c("Own-party feeling" = "#D2691E",
"Rival-party feeling" = "#8B4513")) +
scale_x_continuous(breaks = seq(1990, 2025, 5),
limits = c(1988, 2026)) +
scale_y_continuous(breaks = seq(20, 80, 10),
limits = c(15, 80)) +
labs(
title = "Political Party Feelings Over Time (1990-2024)",
x = "Year",
y = "Feeling Score",
color = "",
caption = "Source: American National Election Studies (ANES)"
) +
theme_minimal() +
theme(
plot.title = element_text(size = 14, hjust = 0.5, face = "bold", margin = margin(b = 20)),
axis.title = element_text(size = 12, face = "bold"),
axis.text = element_text(size = 10),
legend.position = "top",
legend.text = element_text(size = 11),
legend.margin = margin(b = 15),
plot.caption = element_text(size = 9, hjust = 1, color = "gray50", margin = margin(t = 15)),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(color = "gray90", size = 0.5),
plot.margin = margin(20, 20, 20, 20)
)
# Display the plot
print(p)
# Print summary statistics
cat("\nKey observations:\n")
cat("Own-party feeling: 71.3 → 70.5 (change: -0.8)\n")
cat("Rival-party feeling: 46.7 → 20.6 (change: -26.1)\n")
cat("Polarization gap in 1990: 24.6 points\n")
cat("Polarization gap in 2024: 49.9 points\n")
# Optional: Save the plot
# ggsave("party_feelings_anes.png", plot = p, width = 10, height = 6, dpi = 300, bg = "white")
library(ggplot2)
library(dplyr)
library(readr)
# Import data from CSV file
data <- read_csv("polarization-anes.csv")
library(ggplot2)
library(dplyr)
library(readr)
# Import data from CSV file
data <- read_csv("anes/polarization-anes.csv")
# Filter for "All" demographic group and select relevant columns
data_filtered <- data %>%
filter(Demographics == "All", Subgroup == "All") %>%
select(Year, `Own-party feeling`, `Rival-party feeling`)
# Create the plot
p <- ggplot(data_filtered, aes(x = Year)) +
geom_line(aes(y = `Own-party feeling`), color = "#D2691E", size = 1.2) +
geom_point(aes(y = `Own-party feeling`), color = "#D2691E", size = 2.5) +
geom_line(aes(y = `Rival-party feeling`), color = "#8B4513", size = 1.2) +
geom_point(aes(y = `Rival-party feeling`), color = "#8B4513", size = 2.5) +
# Add labels directly on the plot near the lines
annotate("text", x = 2020, y = 72, label = "Own-party feeling",
color = "#D2691E", size = 4, hjust = 0, fontface = "bold") +
annotate("text", x = 2020, y = 22, label = "Rival-party feeling",
color = "#8B4513", size = 4, hjust = 0, fontface = "bold") +
scale_x_continuous(breaks = seq(1980, 2020, 10),
limits = c(1976, 2026)) +
scale_y_continuous(breaks = seq(0, 100, 20),
limits = c(0, 100)) +
labs(
title = "Political Party Feelings Over Time (1978-2024)",
caption = "Source: American National Election Studies (ANES)"
) +
theme_minimal() +
theme(
plot.title = element_text(size = 14, hjust = 0.5, face = "bold", margin = margin(b = 20)),
axis.title = element_blank(),  # Remove both axis labels
axis.text = element_text(size = 10),
legend.position = "none",  # Remove legend since we have direct labels
plot.caption = element_text(size = 9, hjust = 1, color = "gray50", margin = margin(t = 15)),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(color = "gray90", size = 0.5),
plot.margin = margin(20, 20, 20, 20)
)
# Display the plot
print(p)
# Print summary statistics using the actual data range
data_summary <- data_filtered %>%
summarise(
own_start = first(`Own-party feeling`),
own_end = last(`Own-party feeling`),
rival_start = first(`Rival-party feeling`),
rival_end = last(`Rival-party feeling`)
)
cat("\nKey observations:\n")
cat(sprintf("Own-party feeling: %.1f → %.1f (change: %+.1f)\n",
data_summary$own_start, data_summary$own_end,
data_summary$own_end - data_summary$own_start))
cat(sprintf("Rival-party feeling: %.1f → %.1f (change: %+.1f)\n",
data_summary$rival_start, data_summary$rival_end,
data_summary$rival_end - data_summary$rival_start))
cat(sprintf("Polarization gap at start: %.1f points\n",
data_summary$own_start - data_summary$rival_start))
cat(sprintf("Polarization gap at end: %.1f points\n",
data_summary$own_end - data_summary$rival_end))
# Optional: Save the plot
# ggsave("party_feelings_anes.png", plot = p, width = 10, height = 6, dpi = 300, bg = "white")
library(ggplot2)
library(dplyr)
library(readr)
# Import data from CSV file
data <- read_csv("anes/polarization-anes.csv")
# Filter for "All" demographic group and select relevant columns
data_filtered <- data %>%
filter(Demographics == "All", Subgroup == "All") %>%
select(Year, `Own-party feeling`, `Rival-party feeling`)
# Create the plot
p <- ggplot(data_filtered, aes(x = Year)) +
geom_line(aes(y = `Own-party feeling`), color = "#D2691E", size = 1.2) +
geom_point(aes(y = `Own-party feeling`), color = "#D2691E", size = 2.5) +
geom_line(aes(y = `Rival-party feeling`), color = "#8B4513", size = 1.2) +
geom_point(aes(y = `Rival-party feeling`), color = "#8B4513", size = 2.5) +
# Add labels directly on the plot near the lines
annotate("text", x = 2016, y = 80, label = "Own-party feeling",
color = "#D2691E", size = 4, hjust = 0, fontface = "bold") +
annotate("text", x = 2016, y = 16, label = "Rival-party feeling",
color = "#8B4513", size = 4, hjust = 0, fontface = "bold") +
scale_x_continuous(breaks = seq(1980, 2020, 10),
limits = c(1976, 2026)) +
scale_y_continuous(breaks = seq(0, 100, 20),
limits = c(0, 100)) +
labs(
title = "Political Party Feelings Over Time (1978-2024)",
caption = "Source: American National Election Studies (ANES)"
) +
theme_minimal() +
theme(
plot.title = element_text(size = 14, hjust = 0.5, face = "bold", margin = margin(b = 20)),
axis.title = element_blank(),  # Remove both axis labels
axis.text = element_text(size = 10),
legend.position = "none",  # Remove legend since we have direct labels
plot.caption = element_text(size = 9, hjust = 1, color = "gray50", margin = margin(t = 15)),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(color = "gray90", size = 0.5),
plot.margin = margin(20, 20, 20, 20)
)
# Display the plot
print(p)
# Print summary statistics using the actual data range
data_summary <- data_filtered %>%
summarise(
own_start = first(`Own-party feeling`),
own_end = last(`Own-party feeling`),
rival_start = first(`Rival-party feeling`),
rival_end = last(`Rival-party feeling`)
)
cat("\nKey observations:\n")
cat(sprintf("Own-party feeling: %.1f → %.1f (change: %+.1f)\n",
data_summary$own_start, data_summary$own_end,
data_summary$own_end - data_summary$own_start))
cat(sprintf("Rival-party feeling: %.1f → %.1f (change: %+.1f)\n",
data_summary$rival_start, data_summary$rival_end,
data_summary$rival_end - data_summary$rival_start))
cat(sprintf("Polarization gap at start: %.1f points\n",
data_summary$own_start - data_summary$rival_start))
cat(sprintf("Polarization gap at end: %.1f points\n",
data_summary$own_end - data_summary$rival_end))
# Optional: Save the plot
# ggsave("party_feelings_anes.png", plot = p, width = 10, height = 6, dpi = 300, bg = "white")
library(ggplot2)
library(dplyr)
library(readr)
# Import data from CSV file
data <- read_csv("anes/polarization-anes.csv")
# Filter for "All" demographic group and select relevant columns
data_filtered <- data %>%
filter(Demographics == "All", Subgroup == "All") %>%
select(Year, `Own-party feeling`, `Rival-party feeling`)
# Create the plot
p <- ggplot(data_filtered, aes(x = Year)) +
geom_line(aes(y = `Own-party feeling`), color = "#D2691E", size = 1.2) +
geom_point(aes(y = `Own-party feeling`), color = "#D2691E", size = 2.5) +
geom_line(aes(y = `Rival-party feeling`), color = "#8B4513", size = 1.2) +
geom_point(aes(y = `Rival-party feeling`), color = "#8B4513", size = 2.5) +
# Add labels directly on the plot near the lines
annotate("text", x = 2016, y = 78, label = "Own-party feeling",
color = "#D2691E", size = 4, hjust = 0, fontface = "bold") +
annotate("text", x = 2016, y = 15, label = "Rival-party feeling",
color = "#8B4513", size = 4, hjust = 0, fontface = "bold") +
scale_x_continuous(breaks = seq(1980, 2020, 10),
limits = c(1976, 2026)) +
scale_y_continuous(breaks = seq(0, 100, 20),
limits = c(0, 100)) +
labs(
title = "Political Party Feelings Over Time (1978-2024)",
caption = "Source: American National Election Studies (ANES)"
) +
theme_minimal() +
theme(
plot.title = element_text(size = 14, hjust = 0.5, face = "bold", margin = margin(b = 20)),
axis.title = element_blank(),  # Remove both axis labels
axis.text = element_text(size = 10),
legend.position = "none",  # Remove legend since we have direct labels
plot.caption = element_text(size = 9, hjust = 1, color = "gray50", margin = margin(t = 15)),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(color = "gray90", size = 0.5),
plot.margin = margin(20, 20, 20, 20)
)
# Display the plot
print(p)
# Print summary statistics using the actual data range
data_summary <- data_filtered %>%
summarise(
own_start = first(`Own-party feeling`),
own_end = last(`Own-party feeling`),
rival_start = first(`Rival-party feeling`),
rival_end = last(`Rival-party feeling`)
)
cat("\nKey observations:\n")
cat(sprintf("Own-party feeling: %.1f → %.1f (change: %+.1f)\n",
data_summary$own_start, data_summary$own_end,
data_summary$own_end - data_summary$own_start))
cat(sprintf("Rival-party feeling: %.1f → %.1f (change: %+.1f)\n",
data_summary$rival_start, data_summary$rival_end,
data_summary$rival_end - data_summary$rival_start))
cat(sprintf("Polarization gap at start: %.1f points\n",
data_summary$own_start - data_summary$rival_start))
cat(sprintf("Polarization gap at end: %.1f points\n",
data_summary$own_end - data_summary$rival_end))
# Optional: Save the plot
# ggsave("party_feelings_anes.png", plot = p, width = 10, height = 6, dpi = 300, bg = "white")
gc()
